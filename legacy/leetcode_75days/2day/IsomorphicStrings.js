// 205. Isomorphic Strings// Easy//// 4206//// 761//// Add to List//// Share// Given two strings s and t, determine if they are isomorphic.////     Two strings s and t are isomorphic if the characters in s can be replaced to get t.////     All occurrences of tapeEquilibrium.js character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but tapeEquilibrium.js character may map to itself.////////     Example 1://// Input: s = "egg", t = "add"// Output: true// Example 2://// Input: s = "foo", t = "bar"// Output: false// Example 3://// Input: s = "paper", t = "title"// Output: true////// Constraints:////     1 <= s.length <= 5 * 104// t.length == s.length// s and t consist of any valid ascii character./** * @param {string} s * @param {string} t * @return {boolean} */var isIsomorphic = function(s, t) {    //해쉬를 활용하요 문제에 접근해보자    let sHash = {}    let tHash = {}    for(let i = 0 , length= s.length; i<length ; i++){        sHash[s[i]] = t[i]        tHash[t[i]] = s[i]    }    console.log(sHash, tHash)    for(let i = 0 , length= s.length; i<length ; i++){        if(sHash[s[i]] !== t[i])return false        if(tHash[t[i]] !== s[i])return false    }    return true};