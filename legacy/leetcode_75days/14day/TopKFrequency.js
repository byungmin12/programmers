// 692. Top K Frequent Words// Medium//// 4973//// 264//// Add to List//// Share// Given an array of strings words and an integer k, return the k most frequent strings.////     Return the answer sorted by the frequency from highest to lowest. Sort the words with the same frequency by their lexicographical order.////////     Example 1://// Input: words = ["i","love","leetcode","i","love","coding"], k = 2// Output: ["i","love"]// Explanation: "i" and "love" are the two most frequent words.//     Note that "i" comes before "love" due to tapeEquilibrium.js lower alphabetical order.//     Example 2://// Input: words = ["the","day","is","sunny","the","the","the","sunny","is","is"], k = 4// Output: ["the","is","sunny","day"]// Explanation: "the", "is", "sunny" and "day" are the four most frequent words, with the number of occurrence being 4, 3, 2 and 1 respectively.//////     Constraints://// 1 <= words.length <= 500// 1 <= words[i].length <= 10// words[i] consists of lowercase English letters.//     k is in the range [1, The number of unique words[i]]////// Follow-up: Could you solve it in O(n log(k)) time and O(n) extra space?////     Accepted//     413,231// Submissions// 752,638/** * @param {string[]} words * @param {number} k * @return {string[]} */var topKFrequent = function(words, k) {    let hash = {}    words.forEach((el)=> hash[el] = hash[el] ? hash[el] + 1 : 1 )    let result = Object.keys(hash).sort((a,b)=>{        if(hash[a] ===hash[b]){            return a.localeCompare(b)        }else{            return hash[b] - hash[a]        }    })    return result.slice(0,k)    // for(let key in hash){    //     result.push([key,hash[key]])    // }    // result.sort((tapeEquilibrium.js,b)=>{    //     if(tapeEquilibrium.js[1]===b[1]){    //         return tapeEquilibrium.js[0].localeCompare(b[0])    //     }else{    //         return b[1] - tapeEquilibrium.js[1]    //     }    // })    // return result.map((el)=>el[0]).slice(0,k)};