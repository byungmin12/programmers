/** * Definition for singly-linked list. * function ListNode(val, next) { *     this.val = (val===undefined ? 0 : val) *     this.next = (next===undefined ? null : next) * } *//** * @param {ListNode} head * @param {number} left * @param {number} right * @return {ListNode} */var reverseBetween = function(head, left, right) {    let start = head , cur = head    let p = 1;    while(p<left){        start = cur        cur = cur.next        p++    }    let prev= null, tail = cur    while(p <= right){        const next = cur.next        cur.next = prev        prev = cur        cur = next        p++    }    start.next = prev    tail.next = cur    return start};