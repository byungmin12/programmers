function solution(total_sp, skills) {    let size = 0;    skills.forEach((skill)=>{if(skill[1]> size) size = skill[1]} )    const skillTree = Array(size+1).fill(0).map(()=>([]))    skills.forEach((skill)=>{        skillTree[skill[0]].push(skill[1])    } )    const costs = Array(size + 1).fill(0)    const sol = (skillTree,idx) => {        sum = 0        if(skillTree[idx].length===0){            return 1        }        for(const i of skillTree[idx]){            sum = sum + sol(skillTree, i)        }        return sum    }    let sumSize = 0    for(let i =1 ; i<skillTree.length ; i++){        const temp =sol(skillTree,i)        costs[i] = temp        sumSize = sumSize + temp    }    sumSize = total_sp / sumSize    return costs.map((cost)=> cost * sumSize).slice(1)}// 1function solution(movies) {    const map = new Map()    movies.forEach((movie)=>{        map.has(movie) ? map.set(movie, map.get(movie)+1) : map.set(movie, 1)    })    const convertMap = [...map].sort((a,b)=>{        if(a[1] > b[1])return -1        else if( a[1] < b[1] )return 1        else{            if(a[0] > b[0] )return 1            else if(a[0] < b[0])return -1            else 0        }    })    return convertMap.map((data)=>data[0])}// 2function solution(p,n){    // 오전 AM , 오후 PM    // 시: 분 : 초    // N초 후 시간    // 단 n 초 후 시간을 24시간 단위로 변경    // AM, PM 삭제    const [isPm, time] = p.split(" ")    const result = time.split(":")    if(isPm==="PM"){        result[0] = String(Number(result[0]) + 12)    }    // n은 200,000 이하 자연수    const change = (num)=> {        const hours   = Math.floor(num / 3600);        const minutes = Math.floor((num - (hours * 3600)) / 60);        const seconds = num - (hours * 3600) - (minutes * 60);        return [hours, minutes, seconds]    }    const addArr = change(n)    for(let i =result.length -1; i>=0; i-- ){        const sum = Number(result[i]) + addArr[i]        if(i!==0 && sum>=60){            const temp =sum % 60            result[i] = temp===0 ? `00` : temp            result[i -1 ] = Number(result[i -1 ]) + 1        }else if(i===0 && sum >= 24){            const temp =sum % 24            result[i] = temp === 0 ? "00" : `${temp}`        }else{            result[i] = sum < 10 ? `0${sum}` : `${sum}`        }    }    return result.join(":")}// 3function solution(a, b) {    const result = []    const dif = a.length - b.length    //자리수 맞추기    if(dif < 0) {        a = a.padStart(b.length, '0')    } else if(dif > 0) {        b = b.padStart(a.length, '0')    }    let up = 0;    for(let i=a.length; i>0; i--) {        let sum = `${Number(a.slice(i-1, i)) + Number(b.slice(i-1, i)) + up}`        if(Number(sum) >= 10) {            if(i !== 1) {                up = 1                sum = sum[1]            }        } else {            up = 0        }        result.push(sum)    }    return result.reverse().join('')}