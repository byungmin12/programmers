/** * @param {number} n * @param {number[][]} reservedSeats * @return {number} */var maxNumberOfFamilies = function(n, reservedSeats) {    const map = new Map()    for (const [row, col] of reservedSeats) {        const cols = map.get(row) || new Set()        cols.add(col)        map.set(row, cols)    }    console.log(map)    let result = (n - map.size) * 2    for (const cols of map.values()) {        const isFirstFree = ![2, 3, 4, 5].some(col => cols.has(col))        const isLastFree = ![6, 7, 8, 9].some(col => cols.has(col))        const isMidFree = ![4, 5, 6, 7].some(col => cols.has(col))        console.log(isFirstFree,isLastFree,isMidFree)        result += Math.max(isFirstFree + isLastFree, isMidFree)    }    return result};