/** * @param {string} s * @return {string[][]} */function isPalindrome(str) {    let left = 0, right = str.length-1;    while(left < right) {        if(str[left] !== str[right]) return false        left++;        right--;    }    return true;}var partition = function(s) {    const result = []    const backtracking = (str,temp) => {        if(str.length ===0){            result.push(temp)            return        }        for(let i =1; i<=str.length; i++){            const subStr = str.slice(0,i)            if(isPalindrome(subStr)){                backtracking(str.slice(i),[...temp,subStr])            }        }    }    backtracking(s,[])    return result};