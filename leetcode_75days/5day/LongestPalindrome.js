// 409. Longest Palindrome// Easy//// 3180//// 178//// Add to List//// Share// Given a string s which consists of lowercase or uppercase letters, return the length of the longest palindrome that can be built with those letters.////     Letters are case sensitive, for example, "Aa" is not considered a palindrome here.////////     Example 1://// Input: s = "abccccdd"// Output: 7// Explanation: One longest palindrome that can be built is "dccaccd", whose length is 7.// Example 2://// Input: s = "a"// Output: 1// Explanation: The longest palindrome that can be built is "a", whose length is 1.////// Constraints:////     1 <= s.length <= 2000// s consists of lowercase and/or uppercase English letters only.//     Accepted// 327.2K// Submissions// 603K/** * @param {string} s * @return {number} */var longestPalindrome = function(s) {    let obj = {}    for(let i =0; i<s.length; i++){        obj[s[i]] = obj[s[i]] === undefined ? 1 : obj[s[i]] + 1    }    let resultLength = 0    let checkOne = false    for(let str in obj){        let cnt = obj[str]        if(obj[str] %2 ===0){            while(obj[str]){                obj[str] = obj[str] - 1                resultLength ++            }        }else{            while(obj[str] > 1){                obj[str] = obj[str] - 1                resultLength ++            }        }    }    console.log(obj)    for(let a in obj){        if(obj[a] === 1 ){            resultLength ++            break        }    }    console.log(resultLength)    return resultLength};