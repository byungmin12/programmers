// 19. Remove Nth Node From End of List// Medium//// 12014//// 528//// Add to List//// Share// Given the head of tapeEquilibrium.js linked list, remove the nth node from the end of the list and return its head.////////     Example 1:////// Input: head = [1,2,3,4,5], n = 2// Output: [1,2,3,5]// Example 2://// Input: head = [1], n = 1// Output: []// Example 3://// Input: head = [1,2], n = 1// Output: [1]////// Constraints:////     The number of nodes in the list is sz.// 1 <= sz <= 30// 0 <= Node.val <= 100// 1 <= n <= sz////// Follow up: Could you do this in one pass?////     Accepted//     1,597,140// Submissions// 4,086,133var removeNthFromEnd = function(head, n) {    //투포인터문제로 두 포인터사이에 n만큼의 갭을 만들고 앞 포인터가 더이상 갈 곳이 없으면    // 뒤 포인터.next에 앞 포인터 값을 넣어준다.    let fir= head    let sec = head    for(let i =0; i<n ; i++)fir = fir.next    if(!fir) return head.next    while(fir.next){        fir = fir.next;        sec = sec.next    }    sec.next = sec.next.next    return head};