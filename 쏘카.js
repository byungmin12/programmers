function solution(playList, listenTime){    const totalPlayTime = playList.reduce((acc,cur)=> acc=acc+cur);    if(totalPlayTime <= listenTime)return playList.length;    let result = 0;    let list = [...playList];    for(let i=0; i< list.length; i++){        let cnt = 1;        let cur = i+1        let curListenTime = listenTime - 1 ;        while(curListenTime >= 0){            if(cur >= playList.length){                cur = 0;            }            curListenTime = curListenTime - list[cur];            cnt++            cur++        }        result = Math.max(result, cnt)    }    return result}function solution1(s) {    const brackets = ['(', ')', '{', '}', '[', ']'];    const openBrackets = new Set(['(', '{', '[']);    const closeBrackets = new Set([')', '}', ']']);    let answer = 0;    function isValid(str) {        const stack = [];        for (let i = 0; i < str.length; i++) {            const bracket = str[i];            if (openBrackets.has(bracket)) {                stack.push(bracket);            } else if (closeBrackets.has(bracket)) {                const lastOpenBracket = stack.pop();                const idx= brackets.indexOf(bracket);                if (lastOpenBracket !== brackets[idx -1]) {                    return false;                }            }        }        return stack.length === 0;    }    const len = s.length;    for (let i = 0; i <= len; i++) {        for (let j = 0; j < brackets.length; j++) {            const newString = s.slice(0, i) + brackets[j] + s.slice(i);            if (isValid(newString)) {                answer++;            }        }    }    return answer;}// 테스트const input1 = "[]([[]){}";console.log(solution1(input1)); // 출력: 3const input2 = "{([()]))}";console.log(solution1(input2)); // 출력: 4const input3 = "(()()()";console.log(solution1(input3)); // 출력: 7