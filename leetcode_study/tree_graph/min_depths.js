/** * Definition for a binary tree node. * function TreeNode(val, left, right) { *     this.val = (val===undefined ? 0 : val) *     this.left = (left===undefined ? null : left) *     this.right = (right===undefined ? null : right) * } *//** * @param {TreeNode} root * @return {number} */var minDepth = function(root) {    let result = Infinity    if(root === null)return 0    const dfs = (node,deep) => {        if(deep >= result)return        if(node.left ===null && node.right === null && deep < result){            result = deep            return        }        if(node.left)dfs(node.left, deep+1)        if(node.right)dfs(node.right, deep+1)    }    dfs(root,0)    return result + 1};