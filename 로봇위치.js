function solution(park, routes) {    const move = {        N: [-1, 0],        S: [1, 0],        W: [0, -1],        E: [0, 1]    };    let position = [0,0];    for (let i = 0; i < park.length; i++) {        for (let j = 0; j < park[0].length; j++) {            if (park[i][j] === 'S') {                position = [i, j];                break;            }        }    }    for(let route of routes){        const [dir,dis] = route.split(" ")        const [dx, dy] = move[dir];        let nextPos = [position[0] , position[1]];        for(let n =0 ; n<dis ; n++){            nextPos = [nextPos[0] + dx, nextPos[1] + dy];            if(nextPos[0] < 0 || nextPos[0] >= park.length || nextPos[1] < 0 || nextPos[1] >= park[0].length ||park[nextPos[0]][nextPos[1]]=== "X"){                nextPos = position                break            }        }        position = nextPos    }    return position}