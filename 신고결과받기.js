function solution(id_list, report, k) {    let db = createDB(id_list)    for(let i=0, length = report.length; i<length ; i++){        const [user , forbidenPerson] = report[i].split(" ")        if(db[user].report.has(forbidenPerson)===false){            db[forbidenPerson].number = db[forbidenPerson].number + 1        }        db[user].report.add(forbidenPerson)    }    const forbidenList =getForbidenList(db,k)    return calculatingSendingEmail(db,forbidenList)}//데이터 베이스가 필요함 DB에는// 유저명// 신고자// 신고받은 횟수function createDB(userList){    let db = {}    for(let user of userList){        db[user] = {            report: new Set([]),            number:0,            numberOfGettingEmail:0        }    }    return db}// //신고받았을 때 number ++// function addNum(db,user){//     let newDB = {...db}//     newDB[user].number = newDB[user].number + 1//     return newDB// }// //내가 신고한 사람 push// function addReport(db,user,report){//     let newDB = {...db}//     // newDB[user].report = [...newDB[user].report,report]//     newDB[user].report.add(report)//     return newDB// }// 정지 유저function getForbidenList (db,limit){    let newDB = {...db}    let forbidenList = []    for(let user in newDB){        if(newDB[user].number >= limit){            forbidenList.push(user)        }    }    return forbidenList}function calculatingSendingEmail(db,list){    let newDB = {...db}    let countList = []    for(let user in newDB){        for(let forbidenUser of list){            if(newDB[user].report.has(forbidenUser)){                newDB[user].numberOfGettingEmail= newDB[user].numberOfGettingEmail + 1            }        }        countList = [...countList , newDB[user].numberOfGettingEmail]    }    return countList}